package com.cg.banking.daoservices;

import java.util.Arrays;

import com.cg.banking.beans.Account;
import com.cg.banking.beans.Customer;
import com.cg.banking.beans.Transaction;


public class BankingDAOServicesImpl implements BankingDAOServices {
	private static Customer[] customerList = new Customer[10];
	private static int CUSTOMER_ID_COUNTER=111;
	private static int CUSTOMER_IDX_COUNTER=0;
	private static int PINNUMBER=1111;

	private static Account[] accountList=new Account[10];

	@Override
	public int insertCustomer(Customer customer) {
		if( CUSTOMER_IDX_COUNTER >70*customerList.length/100) {
			Customer[] tempList;
			tempList=Arrays.copyOf(customerList, 10+customerList.length );
			customerList=tempList;
		}
		customer.setCustomerId(CUSTOMER_ID_COUNTER++);
		customerList[CUSTOMER_IDX_COUNTER++]=customer;
		return customer.getCustomerId();
	}

	@Override
	public long insertAccount(int customerId, Account account) {
		for(int i=0;i<customerList.length;i++) {
			if(customerList[i]!=null&&customerList[i].getCustomerId()==customerId) {
				customerList[i].getAccounts()[customerList[i].getACCOUNT_IDX_COUNTER()]=account;
				customerList[i].getAccounts()[customerList[i].getACCOUNT_IDX_COUNTER()].setAccountNo(customerList[i].getACCOUNT_ID_COUNTER());
				
				int aidcounter =customerList[i].getACCOUNT_ID_COUNTER();
				aidcounter++;
				int aidxcounter=customerList[i].getACCOUNT_IDX_COUNTER();
				aidxcounter++;
				return (aidcounter-1);
			}
		}
		return 0;
	}
	@Override
	public boolean updateAccount(int customerId, Account account) {
		for(int i=0;i<customerList.length;i++) {
			if(customerList[i]!=null&&customerList[i].getCustomerId()==customerId) {
				customerList[i].getAccounts()[customerList[i].getACCOUNT_IDX_COUNTER()]=account;
				return true;
			}
		}
		return false;
	}

	@Override
	public int generatePin(int customerId, Account account) {
		for(int i=0;i<customerList.length;i++) {
			for(int j=0;j<customerList[i].getAccounts().length;j++) {
			if(customerList[i]!=null&&customerList[i].getCustomerId()==customerId
					&&customerList[i].getAccounts()[j].getAccountNo()==account.getAccountNo()) {
			customerList[i].getAccounts()[j].setPinNumber(PINNUMBER++);
			}
			}
		}
		return 0;
	}

	@Override
	public boolean insertTransaction(int customerId, long accountNo, Transaction transaction) {
		for(int i=0;i<customerList.length;i++) {
			for(int j=0;j<customerList[i].getAccounts().length;j++) {
				if(customerList[i]!=null&&customerList[i].getCustomerId()==customerId
						&&customerList[i].getAccounts()[j].getAccountNo()==accountNo) {
					customerList[i].getAccounts()[j].getTransactions()[customerList[i].getAccounts()[j].getTRANSACTION_IDX_COUNTER()]=transaction;
					customerList[i].getAccounts()[j].getTransactions()[customerList[i].getAccounts()[j].getTRANSACTION_IDX_COUNTER()].setTransactionId(customerList[i].getAccounts()[j].getTRANSACTION_ID_COUNTER());
					int tidcounter=customerList[i].getAccounts()[j].getTRANSACTION_ID_COUNTER();
					tidcounter++;
					int tidxcounter=customerList[i].getAccounts()[j].getTRANSACTION_IDX_COUNTER();
					tidxcounter++;
					return true;
				}	
			}
		}
		return false;
	}

	@Override
	public boolean deleteCustomer(int customerId) {
		for(int i=0;i<customerList.length;i++) 
			if(customerList[i]!=null&&customerId==customerList[i].getCustomerId()) {
				customerList[i]=null;
				return true;	
			}
		return false;
	}

	@Override
	public boolean deleteAccount(int customerId, long accountNo) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public Customer getCustomer(int customerId) {
		for(int i=0;i<customerList.length;i++) {
			if(customerList[i]!=null&&customerList[i].getCustomerId()==customerId) {
				return customerList[i];
			}
		}
		return null;
	}

	@Override
	public Account getAccount(int customerId, long accountNo) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Customer[] getCustomers() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Account[] getAccounts(int customerId) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Transaction[] getTransactions(int customerId, long accountNo) {
		// TODO Auto-generated method stub
		return null;
	}

}
